---

- name: Create breakerbox work directory
  file: path="{{ item }}" state=directory
  with_items:
    - "{{ breakerbox_docker_work_dir }}"
    - "{{ breakerbox_docker_conf_dir }}"
    - "{{ breakerbox_docker_ctmpl_dir }}"

- name: Create breakerbox config directory
  file: path="{{ breakerbox_docker_conf_dir }}" state=directory

- name: Copy breakerbox config file
  template: 
    src:  "breakerbox.yml.j2"
    dest: "{{ breakerbox_docker_conf_dir }}/breakerbox.yml"
  notify: Restart breakerbox

- name: Create consul-template template file of breakerbox instances.yml config file
  template: 
    src:  "instances.yml.ctmpl.j2"
    dest: "{{ breakerbox_docker_ctmpl_dir }}/instances.yml.ctmpl"

- name: Render consul-template template of breakerbox instances config
  shell: >
    {{ breakerbox_consul_template_bin }} \
      -consul "{{ breakerbox_docker_consul_host }}:{{ breakerbox_docker_consul_port }}" \
      -template "{{ breakerbox_docker_ctmpl_dir }}/instances.yml.ctmpl:{{ breakerbox_docker_conf_dir }}/instances.yml" \
      -once
  register: ctmpl

#- debug: var=ctmpl

- name: Create upstart config for breakerbox
  template:
    src:   breakerbox.upstart.j2
    dest:  /etc/init/breakerbox.conf
    owner: root
    group: root
    mode:  0644
  when: ansible_os_family|lower == 'debian'
  notify:
    - Restart breakerbox

- name: Create systemd service unit file for breakerbox
  template:
    src:   breakerbox.service.j2
    dest:  /usr/lib/systemd/system/breakerbox.service
    owner: root
    group: root
    mode:  0644
  when: ansible_os_family|lower == 'redhat'
  notify:
    - Reload systemd
    - Restart breakerbox

- name: Start breakerbox
  service: name=breakerbox enabled=yes state=started
